package Controllers.user;

import com.sun.javafx.stage.EmbeddedWindow;
import entities.Session;
import entities.User;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;
import org.example.MainFX;
import service.UserService;
import utils.SceneSwitch;

import java.util.EventObject;

public class ModifierUser {

    @FXML
    private TextField firstNameField;

    @FXML
    private TextField lastNameField;

    @FXML
    private TextField emailField;

    @FXML
    private PasswordField passwordField;

    @FXML
    private Button modifyButton;

    @FXML
    private Button deleteButton;

    private final UserService service = new UserService();
    private User currentUser;

    @FXML
    public void initialize() {
        // Retrieve the current user from the session or wherever it is stored
        currentUser = Session.getCurrentUser();  // Assuming you have a session management system in place

        // Populate the fields with the current user's information
        if (currentUser != null) {
            firstNameField.setText(currentUser.getFirstName());
            lastNameField.setText(currentUser.getLastName());
            emailField.setText(currentUser.getEmail());
            passwordField.setText(currentUser.getPassword()); // Be cautious with displaying password
        }
    }

    // Modify the user details
    @FXML
    private void modifyUser() {
        // Validate the input fields, make changes, and update the user
        String firstName = firstNameField.getText();
        String lastName = lastNameField.getText();
        String email = emailField.getText();
        String password = passwordField.getText();

        // Update the user details
        currentUser.setFirstName(firstName);
        currentUser.setLastName(lastName);
        currentUser.setEmail(email);
        currentUser.setPassword(password);  // Encrypt the password as needed

        // Call the service to save the updated user
        boolean success = service.modifier(currentUser);
        }

    private boolean isDeleting = false;

    @FXML
    public void deleteUser(ActionEvent actionEvent) {
        // Prevent multiple simultaneous deletion attempts
        if (isDeleting) {
            System.out.println("Deletion in progress...");
            return;
        }

        try {
            isDeleting = true;

            // Confirm deletion with user
            Alert confirmAlert = new Alert(Alert.AlertType.CONFIRMATION);
            confirmAlert.setTitle("Confirm Deletion");
            confirmAlert.setHeaderText("Are you sure you want to delete your account?");
            confirmAlert.setContentText("This action cannot be undone.");

            // Wait for user response
            var result = confirmAlert.showAndWait();
            if (result.isEmpty() || result.get() != ButtonType.OK) {
                isDeleting = false;
                return;
            }

            // Perform deletion
            boolean success = service.supprimer(currentUser.getId());

            if (success) {
                // Clear the current session
                Session.setCurrentUser(null);

                // Show success message
                Alert successAlert = new Alert(Alert.AlertType.INFORMATION);
                successAlert.setTitle("Account Deleted");
                successAlert.setHeaderText("Your account has been successfully deleted.");
                successAlert.showAndWait();

                // Get the current stage (primaryStage)
                Stage primaryStage = (Stage) ((Node) actionEvent.getSource()).getScene().getWindow();

                // Attempt to load the sign-in page with multiple fallback methods
                try {
                    // Method 1: Direct FXML loading
                    FXMLLoader loader = new FXMLLoader(getClass().getResource("/UserUtils/SigninUser.fxml"));
                    Parent root = loader.load();
                    Scene scene = new Scene(root);
                    primaryStage.setScene(scene);
                    primaryStage.setTitle("Sign In");
                    primaryStage.show();
                    
                    System.out.println("Redirected using Method 1 (Direct FXML)");
                } catch (Exception e1) {
                    try {
                        // Method 2: Using SceneSwitch utility
                        SceneSwitch.switchScene(((Node) actionEvent.getSource()), "/UserUtils/SigninUser.fxml");
                        System.out.println("Redirected using Method 2 (SceneSwitch)");
                    } catch (Exception e2) {
                        // Method 3: Fallback to MainFX loading
                        FXMLLoader loader = new FXMLLoader(MainFX.class.getResource("/UserUtils/SigninUser.fxml"));
                        Parent root = loader.load();
                        Scene scene = new Scene(root);
                        primaryStage.setScene(scene);
                        primaryStage.setTitle("Sign In");
                        primaryStage.show();
                        
                        System.out.println("Redirected using Method 3 (MainFX)");
                    }
                }

            } else {
                // Show error message
                Alert errorAlert = new Alert(Alert.AlertType.ERROR);
                errorAlert.setTitle("Deletion Failed");
                errorAlert.setHeaderText("Unable to delete your account.");
                errorAlert.setContentText("Please try again or contact support.");
                errorAlert.showAndWait();
            }
        } catch (Exception e) {
            e.printStackTrace();
            
            // Show exception error message
            Alert exceptionAlert = new Alert(Alert.AlertType.ERROR);
            exceptionAlert.setTitle("Error");
            exceptionAlert.setHeaderText("An unexpected error occurred.");
            exceptionAlert.setContentText(e.getMessage());
            exceptionAlert.showAndWait();
        } finally {
            isDeleting = false;
        }
    }

}
